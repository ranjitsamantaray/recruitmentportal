{
  "_args": [
    [
      {
        "raw": "reflect",
        "scope": null,
        "escapedName": "reflect",
        "name": "reflect",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\bb9663\\node\\recruitmentapp"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "reflect@latest",
  "_id": "reflect@0.1.3",
  "_inCache": true,
  "_location": "/reflect",
  "_nodeVersion": "v0.6.19",
  "_npmUser": {
    "name": "zaach",
    "email": "zack.carter@gmail.com"
  },
  "_npmVersion": "1.1.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reflect",
    "scope": null,
    "escapedName": "reflect",
    "name": "reflect",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/reflect/-/reflect-0.1.3.tgz",
  "_shasum": "6ae7332fe3c97a578772d39b86f96f9462d715fe",
  "_shrinkwrap": null,
  "_spec": "reflect",
  "_where": "C:\\Users\\bb9663\\node\\recruitmentapp",
  "author": {
    "name": "Zach Carter",
    "email": "zach@carter.name",
    "url": "http://zaa.ch"
  },
  "bugs": {
    "url": "http://github.com/zaach/reflect.js/issues"
  },
  "dependencies": {},
  "description": "JavaScript parser adhering to Mozilla's parser API",
  "devDependencies": {
    "jison": "0.3.9",
    "uglify-js": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "6ae7332fe3c97a578772d39b86f96f9462d715fe",
    "tarball": "https://registry.npmjs.org/reflect/-/reflect-0.1.3.tgz"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "homepage": "https://github.com/zaach/reflect.js#readme",
  "keywords": [
    "parser",
    "ast",
    "reflect",
    "javascript"
  ],
  "main": "dist/reflect.js",
  "maintainers": [
    {
      "name": "zaach",
      "email": "zack.carter@gmail.com"
    }
  ],
  "name": "reflect",
  "optionalDependencies": {},
  "readme": "![Reflect.js](https://github.com/zaach/reflect.js/raw/master/reflectjs.png \"Reflect.js\")\n\nReflect.js is a JavaScript (ES3 compatible) implementation of [Mozilla's Parser API](https://developer.mozilla.org/en/SpiderMonkey/Parser_API). It does not currently support some of Mozilla's extensions, such as generators, list comprehensions, `for each`, E4X, etc. but may eventually support ones that are, or become Harmony proposals.\nBuilders are also supported.\n\nParsing really large files can be slow, for reasons [articulated](http://www.andychu.net/ecmascript/RegExp-Enhancements.html) by Andy Chu.\n\n\nDownload\n========\nYou can download a minified-standalone version of reflect.js to embed in web pages [here](https://raw.github.com/zaach/reflect.js/master/standalone/reflect.js).\n\nInstall\n=======\nReflect.js is available as a CommonJS module for Node.js. Simply install it with npm:\n\n    npm install reflect\n\nUse\n=======\n\n    var Reflect = require('reflect');\n\n    var ast = Reflect.parse(\"var a = 4 + 7\");\n\n    console.log(Reflect.stringify(ast, \"  \"));\n\nRefer to [Mozilla's docs](https://developer.mozilla.org/en/SpiderMonkey/Parser_API) for details on the AST interface.\n\nBuilders\n=======\nThe optional [builder](https://developer.mozilla.org/en/SpiderMonkey/Parser_API#Builder_objects) parameter to Reflect.parse() makes it possible to construct user-specified data from the parser, rather than the default Node objects.\n\nThe reflect.js module exports the [default builder](https://raw.github.com/zaach/reflect.js/master/lib/nodes.js) so you can redefine only the node constructors you care about and leave the rest default.\n\n    var Reflect = require('reflect');\n    var builder = Reflect.builder;\n\n    // redefine callback for variable declarations\n    builder[\"variableDeclaration\"] = function (kind, declarators, loc) { ... };\n\n    var ast = Reflect.parse(\"var a = 4 + 7\", {builder: builder});\n\nLicense\n=======\nMIT X Licensed.\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/zaach/reflect.js.git"
  },
  "scripts": {
    "test": "node test/all-tests.js"
  },
  "version": "0.1.3"
}
